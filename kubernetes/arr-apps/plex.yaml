apiVersion: apps/v1
kind: Deployment
metadata:
  name: plex
  namespace: media
  labels:
    app: plex
    env: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: plex
      env: production
  template:
    metadata:
      labels:
        app: plex
        env: production
    spec:
      nodeSelector:
        worker: "true"
      containers:
        - name: plex
          image: "linuxserver/plex:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 32400
              hostPort: 32400
          volumeMounts:
            - name: plexconfig
              mountPath: /config
          env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: "Europe/Berlin"
            - name: VERSION
              value: "docker"
            - name: PLEX_CLAIM
              value: "claim-tralalala"
      volumes:
        - name: plexconfig
          persistentVolumeClaim:
            claimName: plex-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: plex-pvc
  namespace: media
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: plex
  namespace: media
spec:
  selector:
    app: plex
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 32400
      targetPort: 32400
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: plex
  namespace: media
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`www.plex.local.krlab.tech`)
      kind: Rule
      services:
        - name: plex
          port: 32400
    - match: Host(`plex.local.krlab.tech`)
      kind: Rule
      services:
        - name: plex
          port: 32400
  tls:
    secretName: local-krlab-tech-tls
