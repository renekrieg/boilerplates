apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
  namespace: media
  labels:
    app: radarr
spec:
  selector:
    matchLabels:
      app: radarr
  replicas: 1
  template:
    metadata:
      labels:
        app: radarr
    spec:
      nodeSelector:
        worker: "true"
      initContainers:
      - name: chown
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /config"]
        # command: ["sh", "-c", "chown -R 1000:1000 /config && chown -R 1000:1000 /data"]
        volumeMounts:
        - mountPath: /config 
          name: radarr-config  
        # - mountPath: /data 
        #   name: data
      - name: config
        image: busybox
        command: ["sh", "-c"]
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        args:
          - "echo start;[[ ! -f /config/config.xml ]] && echo '<Config><UrlBase>/radarr</UrlBase></Config>'> /config/config.xml;echo end;"
        volumeMounts: 
        - mountPath: /config 
          name: radarr-config 
      containers:
        - name: radarr
          image: ghcr.io/hotio/radarr:latest
          ports:
            - containerPort: 7878
              hostPort: 7878
          env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: "Europe/Berlin"
          volumeMounts:
            - mountPath: /config
              name: radarr-config
            # - mountPath: /data
            #   name: data
      volumes:
        - name: radarr-config
          persistentVolumeClaim:
            claimName: radarr-config-pvc
        # - name: data
        #   persistentVolumeClaim:
        #     claimName: nfs-data
