apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: mediacenter
  labels:
    app: sonarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      securityContext:
        fsGroup: 1000 
      nodeSelector:
        worker: "true"
      initContainers:
      - name: chown
        image: busybox
        command: ["sh", "-c", "chown -R 1000:1000 /config"]
        # command: ["sh", "-c", "chown -R 1000:1000 /config && chown -R 1000:1000 /data"]
        volumeMounts:
        - mountPath: /config 
          name: sonarr-config  
        # - mountPath: /data 
        #   name: data
      - name: config
        image: busybox
        command: ["sh", "-c"]
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
        args:
          - "echo start;[[ ! -f /config/config.xml ]] && echo '<Config><UrlBase>/sonarr</UrlBase></Config>'> /config/config.xml;echo end;"
        volumeMounts: 
        - mountPath: /config 
          name: sonarr-config 
      containers:
        - name: sonarr
          image: linuxserver/sonarr
          ports:
            - containerPort: 8989
              name: webui
          env:
            - name: PGID
              value: "1000"
            - name: PUID
              value: "1000"
            - name: TZ
              value: "Europe/Berlin"
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - curl "http://localhost:8989/sonarr/api/health?ApiKey=$(sed -ne '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}' </config/config.xml)"
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - curl "http://localhost:8989/sonarr/api/system/status?ApiKey=$(sed -ne '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}' </config/config.xml)"
            initialDelaySeconds: 30
            periodSeconds: 10
          volumeMounts:
            - mountPath: "/config"
              name: sonarr-config
            - mountPath: /data
              name: mediacenter
      volumes:
        - name: sonarr-config
          persistentVolumeClaim:
            claimName: sonarr-config-pvc
        - name: mediacenter
          persistentVolumeClaim:
            claimName: nfs-mediacenter
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sonarr
  name: sonarr
  namespace: mediacenter
spec:
  selector:
    app: sonarr
  ports:
  - port: 8989
    protocol: TCP
    targetPort: 8989
  # ---